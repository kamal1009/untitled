<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="D11-KamalKant.local" name="tests.reastaurant.SearchApiTest" tests="6" failures="1" timestamp="30 Sep 2020 19:00:18 GMT" time="10.213" errors="0">
  <testcase name="searchByCoordinate" time="3.106" classname="tests.reastaurant.SearchApiTest"/>
  <testcase name="searchByInvalidLocation" time="2.462" classname="tests.reastaurant.SearchApiTest">
    <failure type="java.lang.AssertionError" message="expected [400] but found [200]">
      <![CDATA[java.lang.AssertionError: expected [400] but found [200]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at apiCalls.Location.searchRestaurant(Location.java:56)
at tests.reastaurant.SearchApiTest.searchByInvalidLocation(SearchApiTest.java:41)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- searchByInvalidLocation -->
  <testcase name="searchByLocation" time="1.190" classname="tests.reastaurant.SearchApiTest"/>
  <testcase name="searchByLocation" time="1.152" classname="tests.reastaurant.SearchApiTest"/>
  <testcase name="searchByLocation" time="1.285" classname="tests.reastaurant.SearchApiTest"/>
  <testcase name="searchByLocation" time="1.018" classname="tests.reastaurant.SearchApiTest"/>
</testsuite> <!-- tests.reastaurant.SearchApiTest -->
